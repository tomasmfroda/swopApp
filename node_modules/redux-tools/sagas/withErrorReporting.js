import _regeneratorRuntime from "/Users/william/Dropbox/redux-tools/node_modules/@babel/runtime/regenerator";
import { call } from 'redux-saga/effects';

var withErrorReporting = function withErrorReporting(fn) {
  return (
    /*#__PURE__*/
    _regeneratorRuntime.mark(function wrappedWithErrorReporting() {
      var _len,
          args,
          _key,
          result,
          _args = arguments;

      return _regeneratorRuntime.wrap(function wrappedWithErrorReporting$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;

              for (_len = _args.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = _args[_key];
              }

              _context.next = 4;
              return call.apply(void 0, [fn].concat(args));

            case 4:
              result = _context.sent;
              return _context.abrupt("return", result);

            case 8:
              _context.prev = 8;
              _context.t0 = _context["catch"](0);
              console.log(_context.t0);
              throw _context.t0;

            case 12:
            case "end":
              return _context.stop();
          }
        }
      }, wrappedWithErrorReporting, this, [[0, 8]]);
    })
  );
};

export default withErrorReporting;