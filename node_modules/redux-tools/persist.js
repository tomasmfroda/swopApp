import _regeneratorRuntime from "/Users/william/Dropbox/redux-tools/node_modules/@babel/runtime/regenerator";
import _asyncToGenerator from "/Users/william/Dropbox/redux-tools/node_modules/@babel/runtime/helpers/esm/asyncToGenerator";

/* global window */
import { backupStorage, getPlatform, platforms } from './utils';
var storage = getPlatform() === platforms.BROWSER && window.localStorage ? window.localStorage : backupStorage;
export var clear =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee() {
    return _regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return storage.clear();

          case 2:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function clear() {
    return _ref.apply(this, arguments);
  };
}();
export var del =
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee2(key) {
    return _regeneratorRuntime.wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.next = 2;
            return storage.removeItem(key);

          case 2:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2, this);
  }));

  return function del(_x) {
    return _ref2.apply(this, arguments);
  };
}();
export var get =
/*#__PURE__*/
function () {
  var _ref3 = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee3(key) {
    var data;
    return _regeneratorRuntime.wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.next = 2;
            return storage.getItem(key);

          case 2:
            data = _context3.sent;
            return _context3.abrupt("return", JSON.parse(data));

          case 4:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, this);
  }));

  return function get(_x2) {
    return _ref3.apply(this, arguments);
  };
}();
export var set =
/*#__PURE__*/
function () {
  var _ref4 = _asyncToGenerator(
  /*#__PURE__*/
  _regeneratorRuntime.mark(function _callee4(key, value) {
    return _regeneratorRuntime.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            if (!(typeof value === 'object' && Object.keys(value).length > 0)) {
              _context4.next = 5;
              break;
            }

            _context4.next = 3;
            return storage.setItem(key, JSON.stringify(value));

          case 3:
            _context4.next = 13;
            break;

          case 5:
            if (!(Array.isArray(value) && value.length > 0)) {
              _context4.next = 10;
              break;
            }

            _context4.next = 8;
            return storage.setItem(key, JSON.stringify(value));

          case 8:
            _context4.next = 13;
            break;

          case 10:
            if (!value) {
              _context4.next = 13;
              break;
            }

            _context4.next = 13;
            return storage.setItem(key, JSON.stringify(value));

          case 13:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4, this);
  }));

  return function set(_x3, _x4) {
    return _ref4.apply(this, arguments);
  };
}();
export default {
  clear: clear,
  del: del,
  get: get,
  set: set
};